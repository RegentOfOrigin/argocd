apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sabnzbd
  labels:
    {{- include "sabnzbd.labels" . | nindent 4 }}
spec:
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.sabnzbd.storageClassName }}
        storageClassName: {{ .Values.sabnzbd.storageClassName }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.sabnzbd.storage }}
  serviceName: sabnzbd
  selector:
    matchLabels:
      {{- include "sabnzbd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.sabnzbd.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sabnzbd.labels" . | nindent 8 }}
        {{- with .Values.sabnzbd.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: sabnzbd
{{/*      {{- if .Values.sabnzbd.vpn.enabled }}*/}}
{{/*      securityContext:*/}}
{{/*        sysctls:*/}}
{{/*          - name: net.ipv4.conf.all.src_valid_mark*/}}
{{/*            value: "1"*/}}
{{/*          - name: net.ipv6.conf.all.disable_ipv6*/}}
{{/*            value: "1"*/}}
{{/*      {{- end }}*/}}
      containers:
        - name: main
          {{- if .Values.sabnzbd.vpn.enabled }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          {{- end }}
          image: "{{ .Values.sabnzbd.image.repository }}:{{ .Values.sabnzbd.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.sabnzbd.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.sabnzbd.service.port }}
              protocol: TCP
          env:
            - name: VPN_ENABLED
              value: {{ .Values.sabnzbd.vpn.enabled | quote }}
            {{- if .Values.sabnzbd.vpn.enabled }}
            # Stored in the vpc under the wireguard folder
            - name: VPN_CONF
              value: wg0
            - name: VPN_PROVIDER
              value: proton
            - name: VPN_LAN_NETWORK
              value: 10.0.0.0/16
            - name: VPN_LAN_LEAK_ENABLED
              value: "false"
            - name: VPN_EXPOSE_PORTS_ON_LAN
              value: {{ .Values.sabnzbd.service.port }}/tcp,{{ .Values.sabnzbd.service.port }}/udp
            - name: VPN_AUTO_PORT_FORWARD
              value: "true"
            - name: VPN_KEEP_LOCAL_DNS
              value: "true"
            - name: VPN_FIREWALL_TYPE
              value: "auto"
              # Host an in cluster proxy
            - name: PRIVOXY_ENABLED
              value: "false"
              # Set unbound at the cluster level
            - name: UNBOUND_ENABLED
              value: "false"
            {{- end }}
          {{- with .Values.sabnzbd.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sabnzbd.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /config
            {{- with .Values.sabnzbd.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.sabnzbd.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sabnzbd.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

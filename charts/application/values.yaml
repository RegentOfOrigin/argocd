global:
  ingress:
    whitelistSourceRange: ''
  multimedia:
    nfs:
      path: /tank/multimedia
      server: tartarus.node.internal
  backups:
    nfs:
      path: /tank/multimedia
      server: tartarus.node.internal

enabled: true

# This is to override the chart name.
nameOverride: ""

multimedia:
  enabled: false
  # volume: {}

backups:
  enabled: false
  # volume: {}

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ""
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

config:
  mountPath: /config
  storage: 2Gi
#  storageClassName: nfs

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}

securityContext: {}

annotations: {}

env:
  - name: PUID
    value: '1000'
  - name: PGID
    value: '1000'

extraEnv: []

# This is to set up the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

# Additional volumes on the output StatefulSet definition.
volumes: []

# Additional volumeMounts on the output StatefulSet definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

terminationGracePeriodSeconds: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # If not set a name is generated using the fullname template
  name: ""

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  enabled: true
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations: {}
  whitelistSourceRange: ""

  # -- Defines which ingress controller will implement the resource
  ingressClassName: ""

  # -- server hostname
  # @default -- `""`
  hostname: ""

  # -- The path to the server
  path: /

  # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`
  pathType: Prefix

  # -- The list of additional hostnames to be covered by ingress record
  # @default -- `[]`
  extraHosts: []

  # -- Additional ingress paths
  # @default -- `[]`
  ## Note: Supports use of custom Helm templates
  extraPaths: []

  # -- Additional ingress rules
  # @default -- `[]`
  ## Note: Supports use of custom Helm templates
  extraRules: []

  # -- Additional TLS configuration
  # @default -- `[]`
  extraTls: []

resources: {}

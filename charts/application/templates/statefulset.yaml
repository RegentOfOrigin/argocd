apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{ toYaml . | indent 4 }}
  {{- end }}
spec:
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.config.storage }}
  serviceName: {{ .Release.Name }}
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "application.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: main
          {{- with include "application.securityContext" . }}
          securityContext:
            {{- . | nindent 12 }}
          {{- end }}
          image: "{{ include "application.image.registry" . | nospace }}{{ .Values.image.repository }}{{ include "application.image.tag" . | nospace }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.service.enabled }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- end }}
          env:
            {{- if or (hasPrefix "linuxserver/" .Values.image.repository) (hasPrefix "hotio/" .Values.image.repository) }}
            {{- with .Values.user }}
            - name: USER
              value: "{{ $.Release.Name }}"
            - name: PUID
              value: "{{ . }}"
            {{- end }}
            {{- with .Values.group }}
            - name: PGID
              value: "{{ . }}"
            {{- end }}
            {{- end }}
            {{- range $name, $value := .Values.env }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.envFrom }}
            - name: {{ $name | quote }}
              valueFrom:
                 {{- $value | toYaml | nindent 16 }}
            {{- end }}
          {{- if .Values.service.enabled }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: {{ .Values.config.mountPath }}
            {{- if .Values.multimedia.enabled }}
            - name: multimedia
              mountPath: /multimedia
            {{- end }}
            {{- if .Values.backups.enabled }}
            - name: backups
              mountPath: /backups
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- if or .Values.multimedia.enabled .Values.backups.enabled .Values.volumes }}
      volumes:
        {{- with .Values.multimedia }}
        {{- if .enabled}}
        - name: multimedia
          {{- if eq .type "nfs" }}
          nfs:
            path: {{ .path }}
            server: {{ .server }}
          {{- else if eq .type "hostPath" }}
          hostPath:
            path: {{ .path }}
            type: Directory
          {{- end }}
        {{- end }}
        {{- end }}
        {{- with .Values.backups }}
        {{- if .enabled}}
        - name: backups
          {{- if eq .type "nfs" }}
          nfs:
            path: {{ .path }}
            server: {{ .server }}
          {{- else if eq .type "hostPath" }}
          hostPath:
            path: {{ .path }}
            type: Directory
          {{- end }}
        {{- end }}
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
